<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecdata.cmp.iaas.mapper.apply.IaasApplyConfigInfoMapper">
    <resultMap id="BaseResultMap" type="com.ecdata.cmp.iaas.entity.apply.IaasApplyConfigInfo">
        <result column="id" property="id"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="apply_id" property="applyId"/>
        <result column="apply_type" property="applyType"/>
        <result column="operation_type" property="operationType"/>
        <result column="server_name" property="serverName"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="area_id" property="areaId"/>
        <result column="cpu" property="cpu"/>
        <result column="memory" property="memory"/>
        <result column="system_disk" property="systemDisk"/>
        <result column="vm_num" property="vmNum"/>
        <result column="lease" property="lease"/>
        <result column="native_port" property="nativePort"/>
        <result column="opposite_port" property="oppositePort"/>
        <result column="port_mapping" property="portMapping"/>
        <result column="password" property="password"/>
        <result column="is_disaster_server" property="isDisasterServer"/>
        <result column="software_require" property="softwareRequire"/>
        <result column="other_require" property="otherRequire"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="eip" property="eip"/>
        <result column="is_two_ccrc" property="isTwoCcrc"/>
        <result column="is_three_ccrc" property="isThreeCcrc"/>
        <result column="model" property="model"/>
        <result column="old_apply_id" property="oldApplyId"/>
        <result column="state" property="state"/>
        <result column="old_process_instance_id" property="oldProcessInstanceId"/>
        <result column="auto_issue" property="autoIssue"/>
    </resultMap>

    <sql id="Base_Column_List">
                id,
                tenant_id,
                apply_id,
                apply_type,
                operation_type,
                server_name,
                native_port,
                opposite_port,
                operation_system,
                area_id,
                cpu,
                memory,
                system_disk,
                vm_num,
                lease,
                native_port,
                port_mapping,
                password,
                is_disaster_server,
                software_require,
                other_require,
                create_user,
                create_time,
                update_user,
                update_time,
                model,
                eip,
                state,
                is_two_ccrc,
                is_three_ccrc,
                old_apply_id,
                old_process_instance_id,
                is_deleted
    </sql>

    <resultMap id="applyConfigInfoResultMap" type="com.ecdata.cmp.iaas.entity.dto.apply.IaasApplyConfigInfoVO">
        <result column="id" property="id"/>
        <result column="apply_id" property="applyId"/>
        <result column="apply_type" property="applyType"/>
        <result column="operation_type" property="operationType"/>
        <result column="server_name" property="serverName"/>
        <result column="operation_system" property="operationSystem"/>
        <result column="area_id" property="areaId"/>
        <result column="cpu" property="cpu"/>
        <result column="memory" property="memory"/>
        <result column="system_disk" property="systemDisk"/>
        <result column="vm_num" property="vmNum"/>
        <result column="lease" property="lease"/>
        <result column="native_port" property="nativePort"/>
        <result column="opposite_port" property="oppositePort"/>
        <result column="port_mapping" property="portMapping"/>
        <result column="model" property="model"/>
        <result column="password" property="password"/>
        <result column="prefix_name" property="prefixName"/>
        <result column="is_disaster_server" property="isDisasterServer"/>
        <result column="software_require" property="softwareRequire"/>
        <result column="other_require" property="otherRequire"/>
        <result column="eip" property="eip"/>
        <result column="is_two_ccrc" property="isTwoCcrc"/>
        <result column="is_three_ccrc" property="isThreeCcrc"/>
        <result column="old_apply_id" property="oldApplyId"/>
        <result column="old_process_instance_id" property="oldProcessInstanceId"/>
        <result column="state" property="state"/>
        <result column="auto_issue" property="autoIssue"/>
        <collection property="portMappingAskVOS"
                    ofType="com.ecdata.cmp.iaas.entity.dto.apply.IaasApplyPortMappingAskVO">
            <result column="mapping_id" property="id"/>
            <result column="mapping_config_id" property="configId"/>
            <result column="mapping_native_port" property="nativePort"/>
            <result column="mapping_opposite_port" property="oppositePort"/>
        </collection>
        <collection property="memoryDiskVOList"
                    ofType="com.ecdata.cmp.iaas.entity.dto.apply.IaasApplyMemoryDiskVO">
            <result column="disk_id" property="id"/>
            <result column="disk_config_id" property="configId"/>
            <result column="memory_disk" property="memoryDisk"/>
            <result column="content" property="content"/>
        </collection>
        <collection property="iaasApplyServiceSecurityResourcesVO"
                    ofType="com.ecdata.cmp.iaas.entity.dto.apply.IaasApplyServiceSecurityResourcesVO">
            <result column="security_id" property="id"/>
            <result column="security_config_id" property="configId"/>
            <result column="is_das" property="isDas"/>
            <result column="das" property="das"/>
            <result column="is_ssl_vpn" property="isSslVpn"/>
            <result column="ssl_vpn" property="sslVpn"/>
            <result column="is_edr" property="isEdr"/>
            <result column="edr" property="edr"/>
            <result column="is_log_audit" property="isLogAudit"/>
            <result column="log_audit" property="logAudit"/>
            <result column="is_loophole_scan" property="isLoopholeScan"/>
            <result column="loophole_scan" property="loopholeScan"/>
            <result column="is_sinfors" property="isSinfors"/>
            <result column="sinfors" property="sinfors"/>
            <result column="is_sinfors_check" property="isSinforsCheck"/>
            <result column="sinfors_check" property="sinforsCheck"/>
            <result column="is_prevent_change" property="isPreventChange"/>
            <result column="is_next_nfw" property="isNextNfw"/>
            <result column="next_nfw" property="nextNfw"/>
            <result column="next_nfw_num" property="nextNfwNum"/>
            <result column="is_web_nfw" property="isWebNfw"/>
            <result column="web_nfw" property="webNfw"/>
            <result column="web_nfw_num" property="webNfwNum"/>
            <result column="is_ips" property="isIps"/>
            <result column="ips" property="ips"/>
            <result column="ips_num" property="ipsNum"/>
            <result column="is_ad" property="isAd"/>
            <result column="ad" property="ad"/>
            <result column="ad_num" property="adNum"/>
            <result column="is_sinfor_ac" property="isSinforAc"/>
            <result column="sinfor_ac" property="sinforAc"/>
            <result column="sinfor_ac_num" property="sinforAcNum"/>
            <result column="is_antivirus" property="isAntivirus"/>
            <result column="is_bastion_host" property="isBastionHost"/>
            <result column="is_spring_board" property="isSpringBoard"/>
            <result column="is_security_platform" property="isSecurityPlatform"/>
        </collection>
        <collection property="iaasApplyNetworkAskVO"
                    ofType="com.ecdata.cmp.iaas.entity.dto.apply.IaasApplyNetworkAskVO">
            <result column="network_id" property="id"/>
            <result column="network_config_id" property="configId"/>
            <result column="n_native_port" property="nativePort"/>
            <result column="opposite_server" property="oppositeServer"/>
            <result column="n_opposite_port" property="oppositePort"/>
            <result column="access_mode" property="accessMode"/>
            <result column="requires" property="requires"/>
        </collection>
    </resultMap>

    <select id="queryApplyConfigInfoList" resultMap="applyConfigInfoResultMap">
        select
        t2.*,
        t5.id disk_id,
        t5.config_id disk_config_id,
        t5.memory_disk,
        t5.content,
        t4.id security_id,
        t4.config_id security_config_id,
        t4.is_das,
        t4.das,
        t4.is_ssl_vpn,
        t4.ssl_vpn,
        t4.is_edr,
        t4.edr,
        t4.is_log_audit,
        t4.log_audit,
        t4.is_loophole_scan,
        t4.loophole_scan,
        t4.is_sinfors,
        t4.sinfors,
        t4.is_sinfors_check,
        t4.sinfors_check,
        t4.is_prevent_change,
        t4.is_next_nfw,
        t4.next_nfw,
        t4.next_nfw_num,
        t4.is_web_nfw,
        t4.web_nfw,
        t4.web_nfw_num,
        t4.is_ips,
        t4.ips,
        t4.ips_num,
        t4.is_ad,
        t4.ad,
        t4.ad_num,
        t4.is_sinfor_ac,
        t4.sinfor_ac,
        t4.sinfor_ac_num,
        t4.is_antivirus,
        t4.is_bastion_host,
        t4.is_security_platform,
        t3.id network_id,
        t3.config_id network_config_id,
        t3.native_port n_native_port,
        t3.opposite_server,
        t3.opposite_port n_opposite_port,
        t3.access_mode,
        t3.requires,
        t10.id mapping_id,
        t10.config_id mapping_config_id,
        t10.native_port mapping_native_port,
        t10.opposite_port mapping_opposite_port
        from iaas_apply_config_info t2
        left join iaas_apply_port_mapping_ask t10 on t2.id=t10.config_id and t10.is_deleted=0
        left join iaas_apply_network_ask t3 on t2.id=t3.config_id and t3.is_deleted=0
        left join iaas_apply_service_security_resources t4 on t2.id=t4.config_id and t4.is_deleted=0
        left join iaas_apply_memory_disk t5 on t2.id=t5.config_id and t5.is_deleted=0
        where t2.is_deleted=0
        <if test="configId !=null and configId !=''">
            and t2.id=#{configId}
        </if>
        <if test="applyId !=null and applyId !=''">
            and t2.apply_id=#{applyId}
        </if>
    </select>

    <select id="queryApplyConfigInfoListByApplyId" resultMap="applyConfigInfoResultMap">
        select
        t2.*,
        t5.id disk_id,
        t5.config_id disk_config_id,
        t5.memory_disk,
        t5.content,
        t4.id security_id,
        t4.config_id security_config_id,
        t4.is_das,
        t4.das,
        t4.is_ssl_vpn,
        t4.ssl_vpn,
        t4.is_edr,
        t4.edr,
        t4.is_log_audit,
        t4.log_audit,
        t4.is_loophole_scan,
        t4.loophole_scan,
        t4.is_sinfors,
        t4.sinfors,
        t4.is_sinfors_check,
        t4.sinfors_check,
        t4.is_prevent_change,
        t4.is_next_nfw,
        t4.next_nfw,
        t4.next_nfw_num,
        t4.is_web_nfw,
        t4.web_nfw,
        t4.web_nfw_num,
        t4.is_ips,
        t4.ips,
        t4.ips_num,
        t4.is_ad,
        t4.ad,
        t4.ad_num,
        t4.is_sinfor_ac,
        t4.sinfor_ac,
        t4.sinfor_ac_num,
        t3.id network_id,
        t3.config_id network_config_id,
        t3.native_port n_native_port,
        t3.opposite_server,
        t3.opposite_port n_opposite_port,
        t3.access_mode,
        t3.requires,
        t10.id mapping_id,
        t10.config_id mapping_config_id,
        t10.native_port mapping_native_port,
        t10.opposite_port mapping_opposite_port
        from iaas_apply_config_info t2
        left join iaas_apply_port_mapping_ask t10 on t2.id=t10.config_id and t10.is_deleted=0
        left join iaas_apply_network_ask t3 on t2.id=t3.config_id and t3.is_deleted=0
        left join iaas_apply_service_security_resources t4 on t2.id=t4.config_id and t4.is_deleted=0
        left join iaas_apply_memory_disk t5 on t2.id=t5.config_id and t5.is_deleted=0
        where t2.is_deleted=0
        and t2.apply_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="queryApplyServerNamePrefix" resultType="int">
        select count(1) from iaas_apply_config_info where prefix_name=#{serverNamePrefix}
    </select>
</mapper>